-------------------------------
RECENT CHANGES, IN PROCESS
-------------------------------



-------------------------------
FIXES, IMPROVEMENTS
-------------------------------

Service:
    review Service code, client - server communication

Lessons entity:
    create and keep lessons db (?) or use autocomplete with existing lessons

Generic:
	Settings: add localization (finish translations)

Config:
	use built-in Config implementation (?)

Notification:
    add buttons, navigation to target screen

Homeworks:
    add priority
    add item option - go to the day in schedule

-------------------------------
NEW FEATURES
-------------------------------

Remote Schedules:
    API to fetch changes
    Notification about changes

-------------------------------
LOCALIZATION GUIDE
-------------------------------

*** STEP 0 ***
Update text in py and kv to be translated using tr._('<some text>')

*** STEP 1 ***
# generate messages.pot with the last text changes on STEP 0
xgettext -Lpython --output=messages.pot main.py main.kv

# merge messages.pot with existing *.po files
msgmerge --update --no-fuzzy-matching --backup=off po/en.po messages.pot
msgmerge --update --no-fuzzy-matching --backup=off po/ru.po messages.pot

*** STEP 2 ***
# update translation in *.po files

*** STEP 3 ***
# if not exist
mkdir data\locales\en\LC_MESSAGES
# if not exist
mkdir data\locales\ru\LC_MESSAGES

# generate *.mo files from *.po
msgfmt -c -o data/locales/en/LC_MESSAGES/mainapp.mo po/en.po
msgfmt -c -o data/locales/ru/LC_MESSAGES/mainapp.mo po/ru.po

-------------------------------
# buildozer
buildozer android clean

buildozer init
buildozer -v android debug
# or to install immediately
buildozer -v android debug deploy

# or release version
buildozer -v android release

adb logcat | grep "python"
-------------------------------
Rebuild after buildozer clean

-------------------------------


Google Play Store.

Schedules - a tool for managing the activities depending on types and objectives

Schedules application aims at helping you to manage your activities on a weekly basis. Add and assign tasks for an activity within a schedule. Use notifications to prevent missing your todos.

Actually this is my first experience in mobile applications. Created with Python+Kivy+KivyMD, that I'm encouraged by opportunity to create mobile applications with Python.
I have many ideas on the extending the functionality so your opinion is important for me. Please feel free to ask any questions or report the issues and also let me know about the wishes concerning improvements.

Main features:
Create schedules of different kinds.
Assign tasks for schedule items.
Use notifications to remind about upcoming tasks.
Customize the app view with theme settings.
Choose the language to use (English and Russian available).
